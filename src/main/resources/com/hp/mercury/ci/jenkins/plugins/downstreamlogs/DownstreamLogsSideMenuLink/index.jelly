<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout">
    <l:layout>
        <l:side-panel>
            <st:include page="sidepanel.jelly" from="${it.build}" optional="true" it="${it.build}"/>
        </l:side-panel>

        <l:main-panel>
            <l:renderOnDemand capture="it" clazz="downstream-logs">
                <st:include page="content.groovy" from="${it}" optional="true" it="${it}" />
            </l:renderOnDemand>

            <j:forEach var="action" items="${it.build.getActions()}">
                <j:if test="${action.class.getName().equals(&quot;com.hp.mercury.ci.jenkins.plugins.downstreamlogs.DownstreamLogsCacheAction&quot;)}">
                    <j:set var="cacheAction" value="${action}"/>
                </j:if>
            </j:forEach>

            <j:if test="${it.getDescriptor().getCacheBuilds()}">
                <br/>
                <br/>
                <br/>
                <br/>
                <br/>
                <br/>
                <st:include page="downstreamLogsCache.groovy" from="${cacheAction}" optional="true" it="${cacheAction}"/>
            </j:if>

        </l:main-panel>

        <script>

            function getByClass(matchClass) {
                var elems = document.getElementsByTagName('*');
                for (i in elems) {
                    if((' ' + elems[i].className + ' ').indexOf(' ' + matchClass + ' ') > -1) {
                        return elems[i];
                    }
                }
            }

            function addSpinner(elem) {
                var spinnerImage = document.createElement("img");
                spinnerImage.src = "${imagesURL}/spinner.gif";
                elem.appendChild(spinnerImage);
                return function() {
                    elem.removeChild(spinnerImage);
                }
            }

            var oldOnLoad;
            if (window.onload) {
                oldOnLoad = function () { window.onload; }
            }

            window.onload = function () {
                if (oldOnLoad) {
                    oldOnLoad();
                }
                var downstreamLogs = getByClass("downstream-logs");
                var removeSpinner = addSpinner(downstreamLogs);
                renderOnDemand(downstreamLogs, removeSpinner);
            }

            //support for "Advanced" cache information
            Behaviour.applySubtree(document.getElementById("downstream-builds-cache"),true)
        </script>

    </l:layout>
</j:jelly>